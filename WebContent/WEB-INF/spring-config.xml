<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd 
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd">

	<!-- Property place holder configuration, hide this for development -->
	<context:property-placeholder location='classpath:application.properties' />


	<bean id="mySQLdataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${${mode}.jdbc.driverClassName}" />
		<property name="url" value="${${mode}.jdbc.url}" />
		<property name="username" value="${${mode}.jdbc.username}" />
		<property name="password" value="${${mode}.jdbc.password}" />
	</bean>

	<!-- SessionFactory configured for MS SQL Server -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="mySQLdataSource" />
		<property name="packagesToScan" value="models" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${${mode}.hibernate.dialect}</prop>
				<prop key="hibernate.default_schema">${${mode}.hibernate.default_schema}</prop>
				<prop key="hibernate.show_sql">${${mode}.hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${${mode}.hibernate.format_sql}</prop>
				<prop key="hibernate.use_sql_comments">${${mode}.hibernate.use_sql_comments}</prop>
				<prop key="hibernate.generate_statistics">${${mode}.hibernate.generate_statistics}</prop>
				<prop key="hibernate.connection.autocommit">false</prop>
			</props>
		</property>
	</bean>


	<!-- TransactionManager configured into the application server -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- Transaction annotated class scanned -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- AOP Aspect Enable -->
	<aop:aspectj-autoproxy />

	<!-- Asynchronous processing enable -->
	<task:annotation-driven />

	<!-- rest configuration -->
	<context:component-scan base-package="common" />
	<context:component-scan base-package="controllers" />
	<context:component-scan base-package="models" />
	<context:component-scan base-package="dao" />
	<context:component-scan base-package="service" />
	<context:component-scan base-package="filters" />
	<context:component-scan base-package="access" />
	
	<!-- when the url pattern comes with /secure/** this intercepter is going 
		to handle the request. If the request has the valid token that intercepter 
		allows to continue the processing of the execution chain -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/secure/**" />
			<bean
				class="filters.RequestHandlerInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>

	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter" />
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="prettyPrint" value="true">
				</property>
			</bean>
			<bean
				class="org.springframework.http.converter.ResourceHttpMessageConverter" />
			<bean
				class="org.springframework.http.converter.xml.SourceHttpMessageConverter" />
			<bean
				class="org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter" />
		</mvc:message-converters>
	</mvc:annotation-driven>
	<context:annotation-config />
	<mvc:default-servlet-handler />
	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="mediaTypes">
			<map>
				<entry key="atom" value="application/atom+xml" />
				<entry key="html" value="text/html" />
				<entry key="json" value="application/json" />
				<entry key="xml" value="application/xml" />
			</map>
		</property>

		<property name="defaultViews">
			<list>
				<bean
					class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
			</list>
		</property>
	</bean>
	<bean
		class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
		<property name="modelKey" value="response" />
	</bean>
	<bean id="annotationMethodHandlerExceptionResolver"
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver">
		<property name="order" value="0" />
	</bean>
</beans>
